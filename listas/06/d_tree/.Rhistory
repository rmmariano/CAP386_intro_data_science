library(C50)
load("Data/CovType2.R")
rows <- nrow(covtype)
covtype <- covtype[sample(rows,rows/100), ]
str(covtype)
library(C50)
library(datasets)
covtype <- read.csv(file="files/covtype.data", header=FALSE, sep=",", stringsAsFactors=FALSE)
head(covtype, n=2)
library(C50)
library(datasets)
library(C50)
library(datasets)
covtype <- read.csv(file="files/covtype.data", header=FALSE, sep=",", stringsAsFactors=FALSE)
covtype <- read.csv(file="files/covtype.data", header=FALSE, sep=",", stringsAsFactors=FALSE)
head(covtype, n=2)
# "Fixed" attributes' names
names <- c("Elevation","Aspect","Slope","HorDistToHydro","VertDistToHydro",
"HorDistRoad","Hillshade09","Hillshade12","Hillshade15",
"HorDistFire")
# Four binary attributes for wilderness areas:
names <- c(names,"WA_RWA","WA_NWA","WA_CPWA","WA_CLPWA")
# 40 (!) binary attributes for soil types:
names <- c(names,sprintf("ST%02d",1:40))
# The cover type
names <- c(names,"Class")
# Assign these names to the attributes
names(covtype) <- names
# Let's also assign labels to the coverage types.
covtype$Class <- as.factor(covtype$Class)
levels(covtype$Class) <- c("Spruce/Fir", "Lodgepole Pine",
"Ponderosa Pine","Cottonwood/Willow","Aspen",
"Douglas-fir","Krummholz")
# How does it looks like?
str(covtype)
countWA <- covtype$WA_RWA + covtype$WA_NWA + covtype$WA_CPWA + covtype$WA_CLPWA
paste(min(countWA),max(countWA))
soilT <- sprintf("ST%02d",1:40)
countST <- rowSums(covtype[,soilT])
paste(min(countST),max(countST))
# Which are the columns we want to consider?
searchOn <- c("WA_RWA","WA_NWA","WA_CPWA","WA_CLPWA")
# Get the index of each WA_
indexOfWA <- apply(covtype[,searchOn], 1, function(x) which(x == 1))
# Convert it to a factor with the column names we used.
factorOfWA <- factor(indexOfWA,labels = searchOn)
# Add it to the data frame
covtype$WildArea <- factorOfWA
# Drop the binary variables we don't need anymore
covtype[searchOn] <- list(NULL)
# Which are the columns we want to consider?
searchOn <- sprintf("ST%02d",1:40)
searchOn
# Get the index of 1 in ST01..ST40
indexOfST <- apply(covtype[,searchOn], 1, function(x) which(x == 1))
# Convert it to a factor with the column names we used.
factorOfST <- factor(indexOfST,labels = searchOn)
# Add it to the data frame
covtype$SoilType <- factorOfST
# Drop the binary variables we don't need anymore
covtype[searchOn] <- list(NULL)
str(covtype)
rows <- nrow(covtype)
covtype <- covtype[sample(rows,rows/100), ]
str(covtype)
modelCT <- C5.0(Class ~ ., data=covtype, control = C5.0Control(noGlobalPruning = TRUE,minCases=1))
plot(modelCT, main="C5.0 Decision Tree - Unpruned, min=1")
covtype
str(covtype)
modelCT <- C5.0(Class ~ ., data=covtype, control = C5.0Control(noGlobalPruning = TRUE,minCases=1))
plot(modelCT, main="C5.0 Decision Tree - Unpruned, min=1")
modelCT
library(sqldf)
covtype
plot(modelCT, main="C5.0 Decision Tree - Unpruned, min=1")
modelCT
modelCT <- C5.0(Class ~ ., data=covtype, control = C5.0Control(noGlobalPruning = TRUE,minCases=1))
plot(modelCT, main="C5.0 Decision Tree - Unpruned, min=1")
modelCT <- C5.0(Class ~ ., data=covtype, control = C5.0Control(noGlobalPruning = TRUE,minCases=1))
modelCT
rows <- nrow(covtype)
covtype <- covtype[sample(rows,rows/100), ]
str(covtype)
modelCT <- C5.0(Class ~ ., data=covtype, control = C5.0Control(noGlobalPruning = TRUE,minCases=1))
modelCT
plot(modelCT, main="C5.0 Decision Tree - Unpruned, min=1")
??C5.0
summary(modelCT)
apropos(C5.0)
plot(modelCT, main="C5.0 Decision Tree - Unpruned, min=1")
partition.tree(modelCT, label = "yval")
summary(modelCT)
plot(modelCT, main="C5.0 Decision Tree - Unpruned, min=1")
library(datasets)
str(iris)
summary(iris)
plot(iris, main="C5.0 Decision Tree - Unpruned, min=1")
plot(iris, main="Iris plot")
plot(iris, main="Iris plot")
sessionInfo()()
sessionInfo()
covtype <- read.csv(file="files/covtype.data", header=FALSE, sep=",", stringsAsFactors=FALSE)
head(covtype, n=2)
rows <- nrow(covtype)
covtype <- covtype[sample(rows,rows/100), ]
str(covtype)
modelCT <- C5.0(Class ~ ., data=covtype, control = C5.0Control(noGlobalPruning = TRUE,minCases=1))
summary(modelCT)
plot(modelCT, main="C5.0 Decision Tree - Unpruned, min=1")
summary(modelCT)
covtype <- read.csv(file="files/covtype.data", header=FALSE, sep=",", stringsAsFactors=FALSE)
head(covtype, n=2)
rows <- nrow(covtype)
covtype <- covtype[sample(rows,rows/100), ]
str(covtype)
modelCT <- C5.0(Class ~ ., data=covtype, control = C5.0Control(noGlobalPruning = TRUE,minCases=1))
summary(modelCT)
